country_history = {
	subtype[not_nat_pir_reb] = {
		government = <government>
		## cardinality = 0..1
		add_government_reform = <government_reform>
		## cardinality = 0..1
		government_rank = int
		## cardinality = 0..1
		mercantilism = int[0..100]
		technology_group = <technology_group>
		## cardinality = 0..1
		unit_type = <technology_group>
		religion = <religion>
		## cardinality = 0..1
		secondary_religion = <religion>
		primary_culture = <culture>
		capital = <province_id>
		## cardinality = 0..1
		###Cannot move capital away from this province & no power cost to move to it
		fixed_capital = <province_id>
		## cardinality = 0..1
		national_focus = enum[power_categories]
		## cardinality = 0..1
		religious_school = <religious_school>
		## cardinality = 0..inf
		historical_rival = enum[country_tags]
		## cardinality = 0..inf
		historical_friend = enum[country_tags]
		## cardinality = 0..1
		elector = yes
		## cardinality = 0..1
		historical_council = enum[council_positions]
		## cardinality = 0..1
		federation = { 
			name = scalar
			members = { 
				## cardinality = 1..inf
				enum[country_tags]
			}
		}
		## cardinality = 0..1

		alias_name[effect] = alias_match_left[effect]

		subtype[sunni] = {
			religious_school = <religious_school>
		}
		

		## cardinality = 0..inf
		date_field = {
			## cardinality = 0..1
			monarch = {
				# set to warning instead of error as regency does not require a name
				# removed warning because it was annoying me
				# severity = warning
				name = localisation_synced #value_set[ruler_name]
				dynasty = localisation_synced #value_set[dynasty_name]
				birth_date = date_field
				death_date = date_field
				adm = int
				dip = int
				mil = int
				## cardinality = 0..1
				regent = bool
				## cardinality = 0..1
				claim = int[0..100]
				## cardinality = 0..1
				female = yes
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					birth_date = date_field
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..1
			monarch_consort = {
				name = localisation_synced #value_set[ruler_name]
				## cardinality = 0..1
				monarch_name = localisation_synced #value_set[ruler_name]
				## cardinality = 0..1
				regent = bool
				## cardinality = 0..1
				female = yes
				adm = int
				dip = int
				mil = int
				## cardinality = 0..1
				dynasty = localisation_synced #value_set[dynasty_name]
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>
			}
			## cardinality = 0..1
			heir = {
				name = localisation_synced #value_set[heir_name]
				## cardinality = 0..1
				monarch_name = localisation_synced #value_set[ruler_name]
				dynasty = localisation_synced #value_set[dynasty_name]
				birth_date = date_field
				death_date = date_field
				adm = int
				dip = int
				mil = int
				## cardinality = 0..1
				claim = int[0..100]
				## cardinality = 0..1
				female = yes
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>
				## cardinality = 0..1
				block_disinherit = yes

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					birth_date = date_field
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..1
			###Defines a consort
			queen = {
				## cardinality = 0..1
				###Country of Origin for the consort, defaults to the current country.
				country_of_origin = enum[country_tags]
				name = localisation_synced #value_set[consort_name]
                ## cardinality = 0..1
				dynasty = localisation_synced #value_set[dynasty_name]
				birth_date = date_field
				## cardinality = 0..1
				death_date = date_field
				female = bool
				adm = int
				dip = int
				mil = int
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..inf
			leader = {
				name = localisation_synced #value_set[leader_name]
				type = enum[military_leader_types]
				fire = int
				shock = int
				manuever = int
				siege = int
				## cardinality = 0..1
				birth_date = date_field
				## cardinality = 0..1
				death_date = date_field
				## cardinality = 0..1
				personality = <leader_personality>
				## cardinality = 0..1
				female = yes
			}

			alias_name[effect] = alias_match_left[effect]

			## cardinality = 0..1
			###Pretty sure this one only works when a leader is spawned
			clear_scripted_personalities = yes
			## cardinality = 0..1
			religion = <religion>
			## cardinality = 0..1
			government = <government>
			## cardinality = 0..1
			culture = <culture>
			## cardinality = 0..1
			primary_culture = <culture>
			## cardinality = 0..inf
			decision = <decision>
			## cardinality = 0..1
			capital = <province_id>
			## cardinality = 0..1
			religious_school = <religious_school>
			## cardinality = 0..1
			historical_rival = enum[country_tags]
			## cardinality = 0..1
			historical_friend = enum[country_tags]
			## cardinality = 0..1
			government_rank = int
			## cardinality = 0..1
			elector = bool
			## cardinality = 0..1
			technology_group = <technology_group>
			## cardinality = 0..1
			mercantilism = int[0..100]
			## cardinality = 0..1
			changed_tag_from = enum[country_tags]
			## cardinality = 0..1
			revolution_target = bool
		}
	}
	subtype[!not_nat_pir_reb] = {
		technology_group = <technology_group>
	}
}
